puts "計算をはじめます" #正解。
puts "何回計算を繰り返しますか？" #正解。

# 不正解。n=gets
input = gets.to_i

# 6章の演習のポイントは「while式」
i=1
while i <=input do
 puts "#{i}回目の計算"
 # 不正解。puts "#1回目の計算"
 puts "2つの値を入力してください" # 正解。

 a=gets.to_i #正解。
 b=gets.to_i #正解。

 puts "a=#{a}" #正解。
 puts "b=#{b}" #正解。

 #以下正解。
 puts "計算結果を出力します"
 puts "#{a}+#{b}=#{a+b}"
 puts "#{a}-#{b}=#{a-b}"
 puts "#{a}*#{b}=#{a*b}"
 puts "#{a}/#{b}=#{a/b}"

 # while式なので入力不要
 # puts "2回目の計算"
 # puts "2つの値を入力してください"
 # a=gets.to_i
 # b=gets.to_i
 # puts "a=#{a}"
 # puts "b=#{b}"
 # puts "計算結果を出力します"
 # puts "#{a}+#{b}=#{a+b}"
 # puts "#{a}-#{b}=#{a-b}"
 # puts "#{a}*#{b}=#{a*b}"
 # puts "#{a}/#{b}=#{a/b}"

 i+=1 #
end


puts "計算を終了します"

# 計算を繰り返す回数（input）と、変数i（初期値1）の比較を行いながら処理を 繰り返すのが今回の確認問題のキモになります。
# 繰り返す回数と等しくなるまでiをインクリメント（変数の値を1増やす演算のこと）します。
# iの数値がinputより大きくなった時点で処理が終了するような比較演算子（i <= input) をwhile式の条件にすることで、
# 期待するロジックを組むことが可能です。
# また、繰り返し条件がうまく考慮できていないと処理が永遠に終わらない「無限ループ」が発生することがあります。
# 仮に無限ループが発生した場合は処理を強制終了させないと終わりません。
# ロジックを組む場合は十分に考えてコーディングをしましょう


